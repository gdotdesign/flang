/* Define helper methods */
@def lowerCase(str) {
  return str.toLowerCase();
}

@def remove(array, item) {
  index = array.indexOf(item);
  array.splice(item, 1);
}

@def match(what, with) {
  if(!what || !with) return true;
  !!what.match(with)
}

@body {
  /* Initialize items */
  $items: [];

  input[type=search]

  ul {
    /* Create list with filters */
    @map $items | pluck(self, 'description') | lowerCase(self) | match(self,`input[type=search]`) {
      li {
        span {
          text: $description;
        }

        i.icon-done {
          :click { $done: !$done }
        }

        i.icon-remove {
          :click { remove($.items, self) }
        }

        @if $done {
          text-decoration: line-through;
        }
      }
    }
  }

  input[type=text][placeholder=Add new item...];

  button {
    text: 'Add';

    /* When clicked add a new item */
    :click {
      add($items, { done: false, description: value(`input[type=text]`) } )
      empty(`input[type=text]`)
    }
  }
}
